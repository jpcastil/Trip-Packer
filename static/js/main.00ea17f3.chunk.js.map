{"version":3,"sources":["Components/ListTitle.js","Components/ListItem.js","Components/List.js","Components/InputItem.js","Components/ListInput.js","App.js","serviceWorker.js","index.js"],"names":["ListTitle","_this","this","react_default","a","createElement","className","props","editing","index_es","icon","faSave","size","color","onClick","saveAll","editFunc","faEdit","value","title","type","onChange","evt","onChangeTitle","addItem","faPlusSquare","Component","ListItem","checked","faCheckCircle","faCircle","onCheckFunc","id","text","App","mapList","newLs","pointerItems","jsonData","i","length","push","ListItem_ListItem","key","ListInput","faTrash","jsonInput","deleteFunc","autoFocus","onChangeFunc","saveFunc","console","log","objRef","InputItem_ListInput","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","state","items","target","getLastId","ls","pointerInput","result","filter","inputObj","itemData","resultLs","itemLsPointer","concat","inputValue","_this2","ListTitle_ListTitle","List_App","ListInput_App","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.00ea17f3.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlusSquare, faEdit, faSave } from '@fortawesome/free-regular-svg-icons'\n\nexport default class ListTitle extends Component{\n\n    render(){\n        return(\n            <div className=\"row\">\n                {this.props.editing ? <FontAwesomeIcon icon={faSave} size=\"3x\" color=\"green\" onClick={this.props.saveAll}/> : <FontAwesomeIcon className=\"col-3\" onClick={this.props.editFunc} icon={faEdit} size=\"3x\" />}\n                {this.props.editing ? <input value={this.props.title} type=\"text\" className='inputStyle' onChange={evt => this.props.onChangeTitle(evt)} /> : <h1 className=\"col-6 text-center\"> {this.props.title} </h1>}\n                <div className=\"col-1\"></div>\n                <FontAwesomeIcon className=\"col-2\"  onClick={this.props.addItem}  icon={faPlusSquare} size=\"3x\" />\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons'\nimport { faCircle } from '@fortawesome/free-regular-svg-icons'\n\nexport default class ListItem extends Component{\n\n    render(){\n        return(\n            <div className=\"row align-items-center\">\n                <div className=\"col-1\">\n                    <FontAwesomeIcon icon={this.props.checked ? faCheckCircle : faCircle} size=\"3x\" onClick={() => this.props.onCheckFunc(this.props.id)}/>\n                </div>\n                <div className=\"col-5\">\n                    {this.props.text}\n                </div>\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport './../App.css';\nimport ListItem from './ListItem'\n\n/*\n                jsonData\n    {\n    key:83,\n    items:[\n            {text:'yogurt',checked:true},\n            {text:'salsa',checked:false,\n            {text:'peanut butter',checked:true}\n        ],\n    title: \"Walmart Trip\"\n    }\n\n*/\n\nexport default class App extends Component{\n\n    mapList = () => {\n        let newLs = []\n        let pointerItems = this.props.jsonData\n        for (let i = 0; i < pointerItems.length; i ++ ) {\n            newLs.push(<ListItem id={pointerItems[ i ].id} key={pointerItems[ i ].id} text={pointerItems[ i ].text} checked={pointerItems[ i ].checked} onCheckFunc={this.props.onCheckFunc}/>)\n        }\n        return newLs\n    }\n\n    render(){\n        return(\n            <div>\n                {this.mapList()}\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport './../App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash, faSave } from '@fortawesome/free-solid-svg-icons'\n\nexport default class ListInput extends Component{\n\n    render(){\n        return(\n            <div>\n                <FontAwesomeIcon icon={faTrash} size=\"2x\" color=\"darkred\" onClick={() => this.props.jsonInput.deleteFunc(this.props.jsonInput.id)}/>\n                <input value={this.props.jsonInput.value} type=\"text\" autoFocus={true} className='inputStyle' onChange={evt => this.props.jsonInput.onChangeFunc(evt, this.props.jsonInput.id)} />\n                {this.props.editing ? <div></div>: <FontAwesomeIcon icon={faSave} size=\"2x\" color=\"blue\" onClick={() => this.props.jsonInput.saveFunc(this.props.jsonInput.id)}/> }\n                <p onClick={() => console.log(this.props)}>See Props</p>\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport './../App.css';\nimport InputItem from './InputItem'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSave } from '@fortawesome/free-solid-svg-icons'\n\n/*\n                jsonData\n    {\n    key:83,\n    items:[\n            {text:'yogurt',checked:true},\n            {text:'salsa',checked:false,\n            {text:'peanut butter',checked:true}\n        ],\n    title: \"Walmart Trip\"\n    }\n\n*/\n\nexport default class App extends Component{\n\n    mapList = () => {\n        let newLs = []\n        let objRef = this.props.jsonInput\n        for (let i = 0; i < objRef.length; i ++ ) {\n            newLs.push(<InputItem key={objRef[ i ].id} id={objRef[ i ].id} jsonInput={objRef[ i ]} editing={this.props.editing}/>)\n        }\n        return newLs\n    }\n\n    render(){\n        return(\n            <div>\n                {this.mapList()}\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport './App.css';\n\nimport ListTitle from './Components/ListTitle'\nimport List from './Components/List'\nimport ListInput from './Components/ListInput'\n\n\n\n\nexport default class App extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            jsonData: {\n                key: null,\n                items: [],\n                title: ''\n            },\n            jsonInput: [\n            ],\n            inputValue: '',\n            editing: false\n        }\n    }\n\n     componentDidMount() {\n    /* data = fetch () */\n    /* this.setState({jsonData: data}) */\n\n    }\n\n    onChangeTitle = (evt) =>{\n        /* Handler function for each inputObj changing value */\n        this.setState({\n            jsonData: {\n                key: this.state.jsonData.key,\n                items: this.state.jsonData.items,\n                title: evt.target.value,\n            },\n        })\n    }\n\n    getLastId = (ls) => {\n        if (ls.length === 0){\n            return 0\n        } else {\n            return ls[ ls.length - 1].id + 1\n        }\n    }\n\n\n    addItem = (value, checked) => {\n        /* Create a new id, being the next number after the last item id */\n        let pointerInput = this.state.jsonInput\n        let pointerItems = this.state.jsonData.items\n        let id = this.getLastId(pointerInput) + this.getLastId(pointerItems)\n        /* Push a new inputObj into inputList. This is in state, so it rerenders */\n        pointerInput.push({id: id, value: value, checked: checked, deleteFunc: this.deleteFunc, onChangeFunc: this.onChangeFunc, saveFunc: this.saveFunc })\n        this.setState({\n            jsonInput: pointerInput\n        })\n    }\n\n    deleteFunc = (id) => {\n        /* Deletes the inputObj in state by filtering. */\n        let pointerInput = this.state.jsonInput\n        let result = pointerInput.filter(inputObj => inputObj.id !== id)\n        this.setState({\n            jsonInput: result\n        })\n    }\n\n    onChangeFunc = (evt, id) =>{\n        /* Handler function for each inputObj changing value */\n        let pointerInput = this.state.jsonInput\n        for (let i = 0; i < pointerInput.length; i ++){\n            if (pointerInput[ i ].id === id){\n                pointerInput[ i ].value = evt.target.value\n            }\n        }\n\n        this.setState({\n          jsonInput: pointerInput\n        })\n    }\n\n    saveFunc = (id) => {\n        /* Converts the inputItem into a ListItem */\n        let pointerInput = this.state.jsonInput\n        let pointerItems\n        /* Find index of input item in ls */\n        for (let i = 0; i < pointerInput.length; i ++){\n            if (pointerInput[ i ].id === id){\n                pointerItems = i\n             }\n        }\n        /* itemData is inputObject */\n        let itemData = pointerInput[ pointerItems ]\n\n        /* If empty, do not save. Else, make it a new list item */\n        if (itemData.value === ''){\n            this.deleteFunc(id)\n        } else {\n            let resultLs = pointerInput.filter(inputObj => inputObj.id !== id)\n\n            let itemLsPointer = this.state.jsonData.items\n            itemLsPointer.push({text: itemData.value, checked: itemData.checked, id: itemData.id})\n\n            this.setState({\n              jsonInput: resultLs,\n              items: itemLsPointer\n            })\n        }\n    }\n\n\n    onCheckFunc = (id) => {\n        /* Changes check boolean for the id */\n        let pointerItems = this.state.jsonData.items\n        for (let i = 0; i < pointerItems.length; i ++) {\n            if (pointerItems[ i ].id === id){\n                pointerItems[ i ].checked = ! pointerItems[ i ].checked\n                break\n            }\n        }\n        this.setState({\n            jsonData: {\n                key: this.state.jsonData.key,\n                items: pointerItems,\n                title: this.state.jsonData.title\n            },\n        })\n    }\n\n    editFunc = () => {\n        let pointerItems = this.state.jsonData.items\n        let pointerInput = this.state.jsonInput\n        let newLs = []\n        for (let i = 0; i < pointerItems.length; i ++){\n            newLs.push({id: pointerItems[ i ].id, value: pointerItems[ i ].text, checked: pointerItems[ i ].checked, deleteFunc: this.deleteFunc, onChangeFunc: this.onChangeFunc, saveFunc: this.saveFunc })\n        }\n        this.setState({\n          jsonInput: newLs.concat(pointerInput),\n          jsonData: {\n              key: this.state.jsonData.key,\n              items: [],\n              title: this.state.jsonData.title,\n          },\n          editing: ! this.state.editing\n        })\n    }\n\n    saveAll = () => {\n        let pointerItems = this.state.jsonData.items\n        let pointerInput = this.state.jsonInput\n        for (let i = 0; i < pointerInput.length; i ++){\n            if (pointerInput[ i ].value !== ''){\n                pointerItems.push({text: pointerInput[ i ].value, checked: pointerInput[ i ].checked, id: pointerInput[ i ].id})\n            }\n        }\n        this.setState({\n          jsonInput: [],\n          jsonData: {\n              key: this.state.jsonData.key,\n              items: pointerItems,\n              title: this.state.jsonData.title\n          },\n          editing: ! this.state.editing\n        })\n    }\n\n    render(){\n        return(\n            <div>\n                <ListTitle saveAll={this.saveAll} title={this.state.jsonData.title} editing={this.state.editing} addItem={() => this.addItem('', false)} editFunc={this.editFunc} onChangeTitle={this.onChangeTitle}/>\n                <List jsonData={this.state.jsonData.items} onCheckFunc={this.onCheckFunc}/>\n                <ListInput jsonInput={this.state.jsonInput} editing={this.state.editing}/>\n            </div>\n        )\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './../node_modules/bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}